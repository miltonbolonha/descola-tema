name: Boilerplate - Github Action Runner
on:
  push:
    branches:
      - develop

jobs:
  preparar:
    name: Init PrÃ©-Requisitos
    runs-on: [self-hosted]
    services:
      mysql:
        image: mariadb:latest
        env:
          MYSQL_DATABASE: test_database
          MYSQL_HOST: 127.0.0.1
          MYSQL_USER: admin
          MYSQL_PASSWORD: rootpass
          MYSQL_ROOT_PASSWORD: rootpass
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    strategy:
      matrix:
        operating-system: [ubuntu-latest]
        dependency-stability: [ 'prefer-stable' ]

    steps:
      - uses: actions/checkout@v2

      - name: Echo PHP Versions
        run: |
         echo 'Install PHP versionss'

      - name: Install PHP versions
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.0'
          extensions: fileinfo, libxml, tokenizer, filter, json, phar, pcre, openssl, pdo
          coverage: xdebug

      - name: Get Composer Cache Directory 2
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"
      - uses: actions/cache@v2
        id: actions-cache
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install headlessCMS
        run: composer create-project --prefer-dist wordplate/wordplate headlessCMS

      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '16.13.1'

      - name: Cache node_modules directory
        uses: actions/cache@v2
        id: node_modules-cache
        with:
          path: node_modules
          key: ${{ runner.OS }}-build-${{ hashFiles('**/package.json') }}-${{ hashFiles('**/package-lock.json') }}

      - name: Comment on a Issue
        uses: actions/github-script@v5
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'ðŸ‘‹ Thanks for reporting!',
              labels: ['Triage']
            })
  apontar:
    needs: preparar
    name: Init stacks n build
    runs-on: [self-hosted]
    steps:
      - name: Copiando arquivos dos plugins para ambiente de testes
        run: |
          rsync -avz ./mnt/* ./headlessCMS

      - name: Build docker images
        working-directory: ./headlessCMS
        run: php -S localhost:3000 -t public/
